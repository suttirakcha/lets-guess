{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Documents/GitHub/lets-guess/src/pages/game-page.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Background } from \"../types/main-page\";\nimport useChangeMode from \"../hooks/useChangeMode\";\nimport useLanguage from \"../hooks/useLanguage\";\nimport { Button } from \"../components/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXmark, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport useTimer from \"../hooks/useTimer\";\nimport { BlockSpace } from \"../components/BlockSpace\";\nimport useAnswerIsHidden from \"../hooks/useAnswerIsHidden\";\nimport useRandomWord from \"../hooks/useRandomWord\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const {\n    lang,\n    cate\n  } = useParams();\n  const {\n    checkIfDarkMode\n  } = useChangeMode();\n  const {\n    mainLang\n  } = useLanguage(lang);\n  const {\n    timerContinue,\n    setTimerContinue,\n    setIsTimeUp,\n    isTimeUp,\n    timerStart\n  } = useTimer();\n  const {\n    defaultText\n  } = useAnswerIsHidden(lang);\n  const {\n    word,\n    category,\n    changeWord,\n    skipWord\n  } = useRandomWord(lang, cate);\n  document.body.style.backgroundColor = checkIfDarkMode ? Background.BlueDark : Background.Blue;\n  const [clearGame, setClearGame] = useState(false);\n  const [startPage, setStartPage] = useState(true);\n  const [isGoingBack, setIsGoingBack] = useState(false);\n  const [isAnswerHidden, setIsAnswerHidden] = useState(false);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (timerContinue !== null) {\n        if (timerContinue > 0) {\n          setTimerContinue(timerContinue - 1);\n          localStorage.setItem(\"timer-continue\", String(timerContinue));\n        }\n      }\n      if (timerContinue == 0) {\n        setIsTimeUp(true);\n        setTimeout(() => {\n          setIsTimeUp(false);\n          setClearGame(true);\n          setIsAnswerHidden(false);\n          clearInterval(timer);\n        }, 2000);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [timerContinue]);\n  console.log(clearGame);\n  const afterGameTexts = ['Having fun?', 'Better luck next time', 'Wanna play again?', 'Hope you have enjoyed the game'];\n  const [afterGameText, setAfterGameText] = useState(afterGameTexts[Math.floor(Math.random() * afterGameTexts.length)]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App${isGoingBack ? ' fade-out-game' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: `head-game${clearGame ? ' active' : ' inactive'}${startPage ? ' start' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sec-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"category\",\n          children: [mainLang.language.category, \": \", category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"get-point\",\n          className: `${skipWord.correction === 'correct' ? 'animate' : ''}`,\n          children: \"Point +1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"timer\",\n        children: timerContinue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checks-btns\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"medium\",\n          onClick: () => setIsAnswerHidden(!isAnswerHidden),\n          children: isAnswerHidden ? mainLang.language.show_answer : mainLang.language.hide_answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"medium\",\n          onClick: () => localStorage.setItem(\"timer-continue\", String(timerStart)),\n          children: \"Back to Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `app-main words-in-screen${clearGame ? ' active' : ' inactive'}${startPage ? ' start' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"words\",\n        className: `${skipWord.correction === 'wrong' ? 'wrong-word ' : ''}${skipWord.correction === 'correct' ? 'correct-word ' : ''}${skipWord.anim}`,\n        children: word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"checks-btns with-top-space\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"incorrect\",\n          onClick: () => changeWord('wrong'),\n          disabled: skipWord.correction === '' ? false : true,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faXmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"correct\",\n          onClick: () => changeWord('correct'),\n          disabled: skipWord.correction === '' ? false : true,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlockSpace, {\n      isActive: isAnswerHidden,\n      text: defaultText !== \"\" ? defaultText : mainLang.language.the_answer_is_hidden\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlockSpace, {\n      isActive: isTimeUp,\n      text: mainLang.language.times_up\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"4A9WxEVNmI/qfY14MMCC5MANNRc=\", false, function () {\n  return [useParams, useChangeMode, useLanguage, useTimer, useAnswerIsHidden, useRandomWord];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["useParams","useEffect","useState","Background","useChangeMode","useLanguage","Button","FontAwesomeIcon","faXmark","faCheck","useTimer","BlockSpace","useAnswerIsHidden","useRandomWord","jsxDEV","_jsxDEV","GamePage","_s","lang","cate","checkIfDarkMode","mainLang","timerContinue","setTimerContinue","setIsTimeUp","isTimeUp","timerStart","defaultText","word","category","changeWord","skipWord","document","body","style","backgroundColor","BlueDark","Blue","clearGame","setClearGame","startPage","setStartPage","isGoingBack","setIsGoingBack","isAnswerHidden","setIsAnswerHidden","timer","setInterval","localStorage","setItem","String","setTimeout","clearInterval","console","log","afterGameTexts","afterGameText","setAfterGameText","Math","floor","random","length","className","children","id","language","fileName","_jsxFileName","lineNumber","columnNumber","correction","size","onClick","show_answer","hide_answer","anim","disabled","icon","isActive","text","the_answer_is_hidden","times_up","_c","$RefreshReg$"],"sources":["/Users/mark/Documents/GitHub/lets-guess/src/pages/game-page.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport { Background, SkipWord } from \"../types/main-page\"\nimport useChangeMode from \"../hooks/useChangeMode\"\nimport useLanguage from \"../hooks/useLanguage\"\nimport { Button } from \"../components/Button\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faXmark, faCheck } from \"@fortawesome/free-solid-svg-icons\"\nimport useTimer from \"../hooks/useTimer\"\nimport { BlockSpace } from \"../components/BlockSpace\"\nimport useAnswerIsHidden from \"../hooks/useAnswerIsHidden\"\nimport useRandomWord from \"../hooks/useRandomWord\"\n\nconst GamePage = () => {\n\n  const { lang, cate } = useParams()\n  const { checkIfDarkMode } = useChangeMode()\n  const { mainLang } = useLanguage(lang)\n  const { timerContinue, setTimerContinue, setIsTimeUp, isTimeUp, timerStart } = useTimer()\n  const { defaultText } = useAnswerIsHidden(lang)\n  const { word, category, changeWord, skipWord } = useRandomWord(lang, cate)\n\n  document.body.style.backgroundColor = checkIfDarkMode ? Background.BlueDark : Background.Blue\n\n  const [clearGame, setClearGame] = useState(false)\n  const [startPage, setStartPage] = useState(true)\n  const [isGoingBack, setIsGoingBack] = useState(false)\n  const [isAnswerHidden, setIsAnswerHidden] = useState(false)\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (timerContinue !== null){\n        if (timerContinue > 0){\n          setTimerContinue(timerContinue - 1)\n          localStorage.setItem(\"timer-continue\", String(timerContinue))\n        }\n      }\n      if (timerContinue == 0){\n        setIsTimeUp(true)\n        setTimeout(() => {\n          setIsTimeUp(false)\n          setClearGame(true)\n          setIsAnswerHidden(false)\n          clearInterval(timer)\n        }, 2000)\n      }\n    }, 1000)\n\n    return () => { clearInterval(timer) }\n  }, [timerContinue])\n\n  console.log(clearGame)\n\n  const afterGameTexts = ['Having fun?','Better luck next time','Wanna play again?','Hope you have enjoyed the game']\n  const [afterGameText, setAfterGameText] = useState(afterGameTexts[Math.floor(Math.random() * afterGameTexts.length)])\n\n  return (\n    <div className={`App${isGoingBack ? ' fade-out-game' : ''}`}>\n      <header className={`head-game${clearGame ? ' active' : ' inactive'}${startPage ? ' start' : ''}`}>\n        <div className=\"sec-left\">\n          <h1 id=\"category\">{mainLang.language.category}: {category}</h1>\n          <h1 id=\"get-point\" className={`${skipWord.correction === 'correct' ? 'animate' : ''}`}>Point +1</h1>\n        </div>\n        <h1 id=\"timer\">{timerContinue}</h1>\n        <div className=\"checks-btns\">\n          <Button size='medium' onClick={() => setIsAnswerHidden(!isAnswerHidden)}>\n            {isAnswerHidden ? mainLang.language.show_answer : mainLang.language.hide_answer}\n          </Button>\n          <Button size='medium' onClick={() => localStorage.setItem(\"timer-continue\", String(timerStart))}>Back to Homepage</Button>\n        </div>\n      </header>\n      <main className={`app-main words-in-screen${clearGame ? ' active' : ' inactive'}${startPage ? ' start' : ''}`}>\n        <h1 id=\"words\" className={`${skipWord.correction === 'wrong' ? 'wrong-word ' : ''}${skipWord.correction === 'correct' ? 'correct-word ' : ''}${skipWord.anim}`}>{word}</h1>\n        <footer className=\"checks-btns with-top-space\">\n          <Button className=\"incorrect\" onClick={() => changeWord('wrong')} disabled={skipWord.correction === '' ? false : true}>\n            <FontAwesomeIcon icon={faXmark}/>\n          </Button>\n          <Button className=\"correct\" onClick={() => changeWord('correct')} disabled={skipWord.correction === '' ? false : true}>\n            <FontAwesomeIcon icon={faCheck}/>\n          </Button>\n        </footer>\n      </main>\n\n      <BlockSpace isActive={isAnswerHidden} text={defaultText !== \"\" ? defaultText : mainLang.language.the_answer_is_hidden}/>\n      <BlockSpace isActive={isTimeUp} text={mainLang.language.times_up}/>\n    </div>\n  )\n}\n\nexport default GamePage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}