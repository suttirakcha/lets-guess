{"ast":null,"code":"import{useState}from\"react\";const usePoint=()=>{const pointStart=localStorage.getItem(\"point\");const[point,setPoint]=useState(parseInt(pointStart));const countPoint=()=>{setPoint(point+1);localStorage.setItem(\"point\",String(point+1));};return{point,countPoint,pointStart};};export default usePoint;","map":{"version":3,"names":["useState","usePoint","pointStart","localStorage","getItem","point","setPoint","parseInt","countPoint","setItem","String"],"sources":["/Users/mark/Documents/GitHub/lets-guess/src/hooks/usePoint.ts"],"sourcesContent":["import { useState } from \"react\"\n\nconst usePoint = () => {\n  const pointStart = localStorage.getItem(\"point\")\n  const [point, setPoint] = useState<number>(parseInt(pointStart!))\n\n  const countPoint = () => {\n    setPoint(point! + 1)\n    localStorage.setItem(\"point\", String(point! + 1))\n  }\n\n  return { point, countPoint, pointStart }\n}\n\nexport default usePoint"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAAC,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGN,QAAQ,CAASO,QAAQ,CAACL,UAAW,CAAC,CAAC,CAEjE,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAM,CACvBF,QAAQ,CAACD,KAAK,CAAI,CAAC,CAAC,CACpBF,YAAY,CAACM,OAAO,CAAC,OAAO,CAAEC,MAAM,CAACL,KAAK,CAAI,CAAC,CAAC,CAAC,CACnD,CAAC,CAED,MAAO,CAAEA,KAAK,CAAEG,UAAU,CAAEN,UAAW,CAAC,CAC1C,CAAC,CAED,cAAe,CAAAD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}