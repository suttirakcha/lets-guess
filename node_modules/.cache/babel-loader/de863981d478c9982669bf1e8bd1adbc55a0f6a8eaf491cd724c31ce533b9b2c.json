{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Documents/GitHub/lets-guess/src/components/ChangeLangDrawer.tsx\",\n  _s = $RefreshSig$();\nimport useLanguage from \"../hooks/useLanguage\";\nimport DrawerCircle from \"./drawers/DrawerCircle\";\nimport { LanguagesEnum } from \"../types/main-page\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangeLangDrawer = ({\n  open,\n  onClose,\n  lang,\n  onChange\n}) => {\n  _s();\n  const {\n    mainLang\n  } = useLanguage(lang);\n  const langList = [{\n    title: `English ${lang !== LanguagesEnum.English ? `(${mainLang.language.english})` : ''}`,\n    link: '/en',\n    isActive: lang === LanguagesEnum.English\n  }, {\n    title: `ไทย ${lang !== LanguagesEnum.Thai ? `(${mainLang.language.thai})` : ''}`,\n    link: '/th',\n    isActive: lang === LanguagesEnum.Thai\n  }, {\n    title: `中文 ${lang !== LanguagesEnum.Chinese ? `(${mainLang.language.chinese})` : ''}`,\n    link: '/zh',\n    isActive: lang === LanguagesEnum.Chinese\n  }];\n  return /*#__PURE__*/_jsxDEV(DrawerCircle, {\n    open: open,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: mainLang.language.select_language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"langList\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"langs\",\n        children: langList.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `${list.isActive ? 'active' : ''}`,\n          onClick: () => !list.isActive && onChange(list.link),\n          children: list.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ChangeLangDrawer, \"dhvNH5hKCDylNtyE6Ejhb96CsIw=\", false, function () {\n  return [useLanguage];\n});\n_c = ChangeLangDrawer;\nexport default ChangeLangDrawer;\nvar _c;\n$RefreshReg$(_c, \"ChangeLangDrawer\");","map":{"version":3,"names":["useLanguage","DrawerCircle","LanguagesEnum","jsxDEV","_jsxDEV","ChangeLangDrawer","open","onClose","lang","onChange","_s","mainLang","langList","title","English","language","english","link","isActive","Thai","thai","Chinese","chinese","children","select_language","fileName","_jsxFileName","lineNumber","columnNumber","id","className","map","list","onClick","_c","$RefreshReg$"],"sources":["/Users/mark/Documents/GitHub/lets-guess/src/components/ChangeLangDrawer.tsx"],"sourcesContent":["import useLanguage from \"../hooks/useLanguage\"\nimport DrawerCircle from \"./drawers/DrawerCircle\"\nimport { LanguagesEnum } from \"../types/main-page\"\n\ninterface ChangeLangDrawerProps {\n  open: boolean\n  onClose: () => void\n  lang: string | undefined\n  onChange: (link: string) => void\n}\n\ninterface LangList {\n  title: string\n  link: string\n  isActive: boolean\n}\n\nconst ChangeLangDrawer = ({ open, onClose, lang, onChange } : ChangeLangDrawerProps) => {\n\n  const { mainLang } = useLanguage(lang)\n\n  const langList: LangList[] = [\n    {\n      title: `English ${lang !== LanguagesEnum.English ? `(${mainLang.language.english})` : ''}`,\n      link: '/en',\n      isActive: lang === LanguagesEnum.English\n    },\n    {\n      title: `ไทย ${lang !== LanguagesEnum.Thai ? `(${mainLang.language.thai})` : ''}`,\n      link: '/th',\n      isActive: lang === LanguagesEnum.Thai\n    },\n    {\n      title: `中文 ${lang !== LanguagesEnum.Chinese ? `(${mainLang.language.chinese})` : ''}`,\n      link: '/zh',\n      isActive: lang === LanguagesEnum.Chinese\n    }\n  ]\n\n  return (\n    <DrawerCircle open={open} onClose={onClose}>\n      <h1>{mainLang.language.select_language}</h1>\n      <div id='langList'>\n        <ul className=\"langs\">\n          {langList.map(list => (\n            <li className={`${list.isActive ? 'active' : ''}`} onClick={() => !list.isActive && onChange(list.link)}>{list.title}</li>\n          ))}\n        </ul>\n      </div>\n    </DrawerCircle>\n  )\n}\n\nexport default ChangeLangDrawer"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,YAAY,MAAM,wBAAwB;AACjD,SAASC,aAAa,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAelD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,IAAI;EAAEC;AAAiC,CAAC,KAAK;EAAAC,EAAA;EAEtF,MAAM;IAAEC;EAAS,CAAC,GAAGX,WAAW,CAACQ,IAAI,CAAC;EAEtC,MAAMI,QAAoB,GAAG,CAC3B;IACEC,KAAK,EAAG,WAAUL,IAAI,KAAKN,aAAa,CAACY,OAAO,GAAI,IAAGH,QAAQ,CAACI,QAAQ,CAACC,OAAQ,GAAE,GAAG,EAAG,EAAC;IAC1FC,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAEV,IAAI,KAAKN,aAAa,CAACY;EACnC,CAAC,EACD;IACED,KAAK,EAAG,OAAML,IAAI,KAAKN,aAAa,CAACiB,IAAI,GAAI,IAAGR,QAAQ,CAACI,QAAQ,CAACK,IAAK,GAAE,GAAG,EAAG,EAAC;IAChFH,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAEV,IAAI,KAAKN,aAAa,CAACiB;EACnC,CAAC,EACD;IACEN,KAAK,EAAG,MAAKL,IAAI,KAAKN,aAAa,CAACmB,OAAO,GAAI,IAAGV,QAAQ,CAACI,QAAQ,CAACO,OAAQ,GAAE,GAAG,EAAG,EAAC;IACrFL,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAEV,IAAI,KAAKN,aAAa,CAACmB;EACnC,CAAC,CACF;EAED,oBACEjB,OAAA,CAACH,YAAY;IAACK,IAAI,EAAEA,IAAK;IAACC,OAAO,EAAEA,OAAQ;IAAAgB,QAAA,gBACzCnB,OAAA;MAAAmB,QAAA,EAAKZ,QAAQ,CAACI,QAAQ,CAACS;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5CxB,OAAA;MAAKyB,EAAE,EAAC,UAAU;MAAAN,QAAA,eAChBnB,OAAA;QAAI0B,SAAS,EAAC,OAAO;QAAAP,QAAA,EAClBX,QAAQ,CAACmB,GAAG,CAACC,IAAI,iBAChB5B,OAAA;UAAI0B,SAAS,EAAG,GAAEE,IAAI,CAACd,QAAQ,GAAG,QAAQ,GAAG,EAAG,EAAE;UAACe,OAAO,EAAEA,CAAA,KAAM,CAACD,IAAI,CAACd,QAAQ,IAAIT,QAAQ,CAACuB,IAAI,CAACf,IAAI,CAAE;UAAAM,QAAA,EAAES,IAAI,CAACnB;QAAK;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAC1H;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEnB,CAAC;AAAAlB,EAAA,CAlCKL,gBAAgB;EAAA,QAECL,WAAW;AAAA;AAAAkC,EAAA,GAF5B7B,gBAAgB;AAoCtB,eAAeA,gBAAgB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}