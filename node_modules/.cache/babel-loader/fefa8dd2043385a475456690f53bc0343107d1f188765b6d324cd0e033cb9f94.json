{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Documents/GitHub/lets-guess/src/components/Settings.tsx\",\n  _s = $RefreshSig$();\nimport useLanguage from \"../hooks/useLanguage\";\nimport DrawerCircle from \"./drawers/DrawerCircle\";\nimport useTimer from \"../hooks/useTimer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ToggleSelect from \"./ToggleSwitch\";\nimport useChangeMode from \"../hooks/useChangeMode\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport useTextIsHidden from \"../hooks/useAnswerIsHidden\";\nimport { TextInput } from \"./TextInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = ({\n  open,\n  onClose,\n  lang\n}) => {\n  _s();\n  const {\n    mainLang\n  } = useLanguage(lang);\n  const {\n    timerSwitch,\n    toggleTimer\n  } = useTimer();\n  const {\n    changeMode\n  } = useChangeMode();\n  const {\n    hasSensitiveWords,\n    warningText,\n    text,\n    setText\n  } = useTextIsHidden(lang);\n  return /*#__PURE__*/_jsxDEV(DrawerCircle, {\n    open: open,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: mainLang.language.settings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), mainLang.language.settings_note, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-sec\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: mainLang.language.timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleSelect, {\n        id: \"switch-timer\",\n        checked: timerSwitch,\n        onChange: toggleTimer,\n        valueOne: mainLang.language.sixty_seconds,\n        valueTwo: mainLang.language.hundred_twenty_seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: mainLang.language.timer_note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-sec\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: mainLang.language.screen_appearance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen-appearance\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"appear light-btn\",\n          onClick: () => changeMode('light'),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSun\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), \" \", mainLang.language.light_mode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"appear dark-btn\",\n          onClick: () => changeMode('dark'),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faMoon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), \" \", mainLang.language.dark_mode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-sec\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: mainLang.language.hidden_answer_text_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        className: `${hasSensitiveWords ? 'warning' : ''}`,\n        placeholder: mainLang.language.the_answer_is_hidden,\n        id: \"hidden-answer-text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), mainLang.language.hidden_answer_text_desc, /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"warning-hidden-text\",\n        className: `${hasSensitiveWords ? 'active' : 'inactive'}`,\n        children: warningText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"1UBiebIEVrJAyfGZYxz4og5Bp64=\", false, function () {\n  return [useLanguage, useTimer, useChangeMode, useTextIsHidden];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["useLanguage","DrawerCircle","useTimer","FontAwesomeIcon","ToggleSelect","useChangeMode","faSun","faMoon","useTextIsHidden","TextInput","jsxDEV","_jsxDEV","Settings","open","onClose","lang","_s","mainLang","timerSwitch","toggleTimer","changeMode","hasSensitiveWords","warningText","text","setText","children","language","settings","fileName","_jsxFileName","lineNumber","columnNumber","settings_note","className","timer","id","checked","onChange","valueOne","sixty_seconds","valueTwo","hundred_twenty_seconds","timer_note","screen_appearance","onClick","icon","light_mode","dark_mode","hidden_answer_text_title","placeholder","the_answer_is_hidden","value","e","target","autoComplete","hidden_answer_text_desc","_c","$RefreshReg$"],"sources":["/Users/mark/Documents/GitHub/lets-guess/src/components/Settings.tsx"],"sourcesContent":["import useLanguage from \"../hooks/useLanguage\"\nimport DrawerCircle from \"./drawers/DrawerCircle\"\nimport useTimer from \"../hooks/useTimer\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport ToggleSelect from \"./ToggleSwitch\"\nimport useChangeMode from \"../hooks/useChangeMode\"\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport useTextIsHidden from \"../hooks/useAnswerIsHidden\"\nimport { TextInput } from \"./TextInput\"\n\ninterface SettingsProps {\n  lang: string | undefined\n  open: boolean\n  onClose: () => void\n}\n\nconst Settings = ({ open, onClose, lang } : SettingsProps) => {\n\n  const { mainLang } = useLanguage(lang)\n  const { timerSwitch, toggleTimer } = useTimer()\n  const { changeMode } = useChangeMode()\n  const { hasSensitiveWords, warningText, text, setText } = useTextIsHidden(lang)\n\n  return (\n    <DrawerCircle open={open} onClose={onClose}>\n      <h1>{mainLang.language.settings}</h1>\n\n      {mainLang.language.settings_note}\n\n      <div className=\"setting-sec\">\n        <h2>{mainLang.language.timer}</h2>\n\n        <ToggleSelect id='switch-timer' checked={timerSwitch} onChange={toggleTimer} valueOne={mainLang.language.sixty_seconds} valueTwo={mainLang.language.hundred_twenty_seconds}/>\n        <p>{mainLang.language.timer_note}</p>\n      </div>\n\n      <div className=\"setting-sec\">\n        <h2>{mainLang.language.screen_appearance}</h2>\n        <div className=\"screen-appearance\">\n          <button className=\"appear light-btn\" onClick={() => changeMode('light')}>\n            <FontAwesomeIcon icon={faSun} /> {mainLang.language.light_mode}\n          </button>\n          <button className=\"appear dark-btn\" onClick={() => changeMode('dark')}>\n            <FontAwesomeIcon icon={faMoon} /> {mainLang.language.dark_mode}\n          </button>\n        </div>\n      </div>\n    \n      <div className=\"setting-sec\">\n        <h2>{mainLang.language.hidden_answer_text_title}</h2>\n        <TextInput className={`${hasSensitiveWords ? 'warning' : ''}`} placeholder={mainLang.language.the_answer_is_hidden} id=\"hidden-answer-text\" value={text} onChange={e => setText(e.target.value)} autoComplete=\"off\"/>\n        {mainLang.language.hidden_answer_text_desc}\n        <p id=\"warning-hidden-text\" className={`${hasSensitiveWords ? 'active' : 'inactive'}`}>{warningText}</p>\n      </div>\n    </DrawerCircle>\n  )\n}\n\nexport default Settings"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}