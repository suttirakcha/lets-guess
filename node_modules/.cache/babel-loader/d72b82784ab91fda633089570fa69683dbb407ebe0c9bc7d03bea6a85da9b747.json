{"ast":null,"code":"import{useEffect,useState}from\"react\";import{LanguagesEnum}from\"../types/main-page\";import{sensitiveWords}from\"../data/sensitive-words\";import useLanguage from\"./useLanguage\";const useAnswerIsHidden=lang=>{const{mainLang}=useLanguage(lang);const defaultText=localStorage.length>0&&localStorage.getItem(lang===LanguagesEnum.Thai?\"text-hidden-th\":lang===LanguagesEnum.Chinese?\"text-hidden-zh\":lang===LanguagesEnum.German?\"text-hidden-de\":\"text-hidden\")||\"\";const[text,setText]=useState(defaultText);const[warningText,setWarningText]=useState(\"\");const[hasSensitiveWords,setHasSensitiveWords]=useState(false);const handleMessage=message=>{lang===LanguagesEnum.Thai?localStorage.setItem(\"text-hidden-th\",message):lang===LanguagesEnum.Chinese?localStorage.setItem(\"text-hidden-zh\",message):lang===LanguagesEnum.German?localStorage.setItem(\"text-hidden-de\",message):localStorage.setItem(\"text-hidden\",message);};useEffect(()=>{if(sensitiveWords.some(word=>text.toUpperCase().includes(word.toUpperCase()))){setHasSensitiveWords(true);setWarningText(mainLang.language.warning_text);handleMessage(\"\");}else if(text.includes(\"@\")){setHasSensitiveWords(true);setWarningText(mainLang.language.atsign_not_allowed);handleMessage(\"\");}else{setHasSensitiveWords(false);handleMessage(text);}},[hasSensitiveWords,text]);return{hasSensitiveWords,text,warningText,setText,defaultText};};export default useAnswerIsHidden;","map":{"version":3,"names":["useEffect","useState","LanguagesEnum","sensitiveWords","useLanguage","useAnswerIsHidden","lang","mainLang","defaultText","localStorage","length","getItem","Thai","Chinese","German","text","setText","warningText","setWarningText","hasSensitiveWords","setHasSensitiveWords","handleMessage","message","setItem","some","word","toUpperCase","includes","language","warning_text","atsign_not_allowed"],"sources":["/Users/mark/Documents/GitHub/lets-guess/src/hooks/useAnswerIsHidden.ts"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { LangType, LanguagesEnum } from \"../types/main-page\"\nimport { sensitiveWords } from \"../data/sensitive-words\"\nimport useLanguage from \"./useLanguage\"\n\nconst useAnswerIsHidden = (lang: LangType) => {\n\n  const { mainLang } = useLanguage(lang)\n\n  const defaultText: string = \n    localStorage.length > 0 && localStorage.getItem(\n      lang === LanguagesEnum.Thai ? \"text-hidden-th\" : \n      lang === LanguagesEnum.Chinese ? \"text-hidden-zh\" :\n      lang === LanguagesEnum.German ? \"text-hidden-de\" :\n      \"text-hidden\"\n    ) || \"\"\n\n  const [text, setText] = useState<string>(defaultText)\n  const [warningText, setWarningText] = useState<string>(\"\")\n  const [hasSensitiveWords, setHasSensitiveWords] = useState(false)\n\n  const handleMessage = (message: string) => {\n    lang === LanguagesEnum.Thai ?\n      localStorage.setItem(\"text-hidden-th\", message) :\n    lang === LanguagesEnum.Chinese ?\n      localStorage.setItem(\"text-hidden-zh\", message) :\n    lang === LanguagesEnum.German ?\n      localStorage.setItem(\"text-hidden-de\", message) :\n      localStorage.setItem(\"text-hidden\", message)\n  }\n\n  useEffect(() => {\n    if (sensitiveWords.some(word => text.toUpperCase().includes(word.toUpperCase()))){\n      setHasSensitiveWords(true)\n      setWarningText(mainLang.language.warning_text)\n      handleMessage(\"\")\n    } else if (text.includes(\"@\")){\n      setHasSensitiveWords(true)\n      setWarningText(mainLang.language.atsign_not_allowed)\n      handleMessage(\"\")\n    } else {\n      setHasSensitiveWords(false)\n      handleMessage(text)\n    }\n  }, [hasSensitiveWords, text])\n\n  return { hasSensitiveWords, text, warningText, setText, defaultText }\n}\n\nexport default useAnswerIsHidden"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAAmBC,aAAa,KAAQ,oBAAoB,CAC5D,OAASC,cAAc,KAAQ,yBAAyB,CACxD,MAAO,CAAAC,WAAW,KAAM,eAAe,CAEvC,KAAM,CAAAC,iBAAiB,CAAIC,IAAc,EAAK,CAE5C,KAAM,CAAEC,QAAS,CAAC,CAAGH,WAAW,CAACE,IAAI,CAAC,CAEtC,KAAM,CAAAE,WAAmB,CACvBC,YAAY,CAACC,MAAM,CAAG,CAAC,EAAID,YAAY,CAACE,OAAO,CAC7CL,IAAI,GAAKJ,aAAa,CAACU,IAAI,CAAG,gBAAgB,CAC9CN,IAAI,GAAKJ,aAAa,CAACW,OAAO,CAAG,gBAAgB,CACjDP,IAAI,GAAKJ,aAAa,CAACY,MAAM,CAAG,gBAAgB,CAChD,aACF,CAAC,EAAI,EAAE,CAET,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAASO,WAAW,CAAC,CACrD,KAAM,CAACS,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAS,EAAE,CAAC,CAC1D,KAAM,CAACkB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CAEjE,KAAM,CAAAoB,aAAa,CAAIC,OAAe,EAAK,CACzChB,IAAI,GAAKJ,aAAa,CAACU,IAAI,CACzBH,YAAY,CAACc,OAAO,CAAC,gBAAgB,CAAED,OAAO,CAAC,CACjDhB,IAAI,GAAKJ,aAAa,CAACW,OAAO,CAC5BJ,YAAY,CAACc,OAAO,CAAC,gBAAgB,CAAED,OAAO,CAAC,CACjDhB,IAAI,GAAKJ,aAAa,CAACY,MAAM,CAC3BL,YAAY,CAACc,OAAO,CAAC,gBAAgB,CAAED,OAAO,CAAC,CAC/Cb,YAAY,CAACc,OAAO,CAAC,aAAa,CAAED,OAAO,CAAC,CAChD,CAAC,CAEDtB,SAAS,CAAC,IAAM,CACd,GAAIG,cAAc,CAACqB,IAAI,CAACC,IAAI,EAAIV,IAAI,CAACW,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/EN,oBAAoB,CAAC,IAAI,CAAC,CAC1BF,cAAc,CAACX,QAAQ,CAACqB,QAAQ,CAACC,YAAY,CAAC,CAC9CR,aAAa,CAAC,EAAE,CAAC,CACnB,CAAC,IAAM,IAAIN,IAAI,CAACY,QAAQ,CAAC,GAAG,CAAC,CAAC,CAC5BP,oBAAoB,CAAC,IAAI,CAAC,CAC1BF,cAAc,CAACX,QAAQ,CAACqB,QAAQ,CAACE,kBAAkB,CAAC,CACpDT,aAAa,CAAC,EAAE,CAAC,CACnB,CAAC,IAAM,CACLD,oBAAoB,CAAC,KAAK,CAAC,CAC3BC,aAAa,CAACN,IAAI,CAAC,CACrB,CACF,CAAC,CAAE,CAACI,iBAAiB,CAAEJ,IAAI,CAAC,CAAC,CAE7B,MAAO,CAAEI,iBAAiB,CAAEJ,IAAI,CAAEE,WAAW,CAAED,OAAO,CAAER,WAAY,CAAC,CACvE,CAAC,CAED,cAAe,CAAAH,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}