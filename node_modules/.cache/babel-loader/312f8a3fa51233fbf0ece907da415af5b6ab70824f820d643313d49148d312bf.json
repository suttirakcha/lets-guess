{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst usePoint = () => {\n  _s();\n  const pointStart = localStorage.getItem(\"point\");\n  const [point, setPoint] = useState(parseInt(pointStart));\n  const countPoint = () => {\n    setPoint(point + 1);\n    localStorage.setItem(\"point\", String(point + 1));\n  };\n  return {\n    point,\n    countPoint,\n    pointStart\n  };\n};\n_s(usePoint, \"DTHedjopZt8wJ+7Mo3qU5n4b5ds=\");\nexport default usePoint;","map":{"version":3,"names":["useState","usePoint","_s","pointStart","localStorage","getItem","point","setPoint","parseInt","countPoint","setItem","String"],"sources":["/Users/mark/Documents/GitHub/lets-guess/src/hooks/usePoint.ts"],"sourcesContent":["import { useState } from \"react\"\nimport { CountType } from \"../types/main-page\"\n\nconst usePoint = () => {\n  const pointStart = localStorage.getItem(\"point\")\n  const [point, setPoint] = useState<number>(parseInt(pointStart!))\n\n  const countPoint = () => {\n    setPoint(point! + 1)\n    localStorage.setItem(\"point\", String(point! + 1))\n  }\n\n  return { point, countPoint, pointStart }\n}\n\nexport default usePoint"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAGhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAASQ,QAAQ,CAACL,UAAW,CAAC,CAAC;EAEjE,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACvBF,QAAQ,CAACD,KAAK,GAAI,CAAC,CAAC;IACpBF,YAAY,CAACM,OAAO,CAAC,OAAO,EAAEC,MAAM,CAACL,KAAK,GAAI,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,OAAO;IAAEA,KAAK;IAAEG,UAAU;IAAEN;EAAW,CAAC;AAC1C,CAAC;AAAAD,EAAA,CAVKD,QAAQ;AAYd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}