{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Documents/GitHub/lets-guess/src/pages/game-page.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Background } from \"../types/main-page\";\nimport useChangeMode from \"../hooks/useChangeMode\";\nimport useLanguage from \"../hooks/useLanguage\";\nimport { Button } from \"../components/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXmark, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport useTimer from \"../hooks/useTimer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  var _mainLang$sortedCate$;\n  const {\n    lang,\n    cate\n  } = useParams();\n  const {\n    checkIfDarkMode\n  } = useChangeMode();\n  const {\n    mainLang\n  } = useLanguage(lang);\n  const {\n    timerStart,\n    countTimer\n  } = useTimer();\n  document.body.style.backgroundColor = checkIfDarkMode ? Background.BlueDark : Background.Blue;\n  const words = (_mainLang$sortedCate$ = mainLang.sortedCate.find(item => item.link == `/${lang}/${cate}`)) === null || _mainLang$sortedCate$ === void 0 ? void 0 : _mainLang$sortedCate$.words;\n  const randomWord = words === null || words === void 0 ? void 0 : words[Math.floor(Math.random() * words.length)];\n  const [clearGame, setClearGame] = useState(false);\n  const [startPage, setStartPage] = useState(true);\n  const [word, setWord] = useState(randomWord);\n  const [skipWord, setSkipWord] = useState({\n    anim: '',\n    correction: ''\n  });\n  const changeWord = correction => {\n    const [...guessWord] = words;\n    const nextWord = words && guessWord[Math.floor(Math.random() * words.length)];\n    setSkipWord(prev => ({\n      ...prev,\n      anim: 'out'\n    }));\n    correction === 'wrong' ? setSkipWord(prev => ({\n      ...prev,\n      correction: 'wrong'\n    })) : correction === 'correct' ? setSkipWord(prev => ({\n      ...prev,\n      correction: 'correct'\n    })) : setSkipWord(prev => ({\n      ...prev,\n      correction: ''\n    }));\n    setTimeout(() => {\n      setWord(nextWord);\n      setSkipWord({\n        correction: '',\n        anim: 'in'\n      });\n    }, 600);\n    setTimeout(() => [setSkipWord({\n      correction: '',\n      anim: ''\n    })], 1200);\n  };\n  useEffect(() => {\n    countTimer();\n    console.log(timerStart);\n  }, [timerStart]);\n  const afterGameTexts = ['Having fun?', 'Better luck next time', 'Wanna play again?', 'Hope you have enjoyed the game'];\n  const [afterGameText, setAfterGameText] = useState(afterGameTexts[Math.floor(Math.random() * afterGameTexts.length)]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `app-main words-in-screen${clearGame ? ' active' : ' inactive'}${startPage ? ' start' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"words\",\n        className: `${skipWord.correction === 'wrong' ? 'wrong-word ' : ''}${skipWord.correction === 'correct' ? 'correct-word ' : ''}${skipWord.anim}`,\n        children: word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"checks-btns with-top-space\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"incorrect\",\n          onClick: () => changeWord('wrong'),\n          disabled: skipWord.correction !== '' ? true : false,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faXmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"correct\",\n          onClick: () => changeWord('correct'),\n          disabled: skipWord.correction !== '' ? true : false,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"fxvNSTOxDXL+3bbnuCCkaUbenW4=\", false, function () {\n  return [useParams, useChangeMode, useLanguage, useTimer];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["useParams","useEffect","useState","Background","useChangeMode","useLanguage","Button","FontAwesomeIcon","faXmark","faCheck","useTimer","jsxDEV","_jsxDEV","GamePage","_s","_mainLang$sortedCate$","lang","cate","checkIfDarkMode","mainLang","timerStart","countTimer","document","body","style","backgroundColor","BlueDark","Blue","words","sortedCate","find","item","link","randomWord","Math","floor","random","length","clearGame","setClearGame","startPage","setStartPage","word","setWord","skipWord","setSkipWord","anim","correction","changeWord","guessWord","nextWord","prev","setTimeout","console","log","afterGameTexts","afterGameText","setAfterGameText","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","icon","_c","$RefreshReg$"],"sources":["/Users/mark/Documents/GitHub/lets-guess/src/pages/game-page.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport { Background } from \"../types/main-page\"\nimport useChangeMode from \"../hooks/useChangeMode\"\nimport useLanguage from \"../hooks/useLanguage\"\nimport { Button } from \"../components/Button\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faXmark, faCheck } from \"@fortawesome/free-solid-svg-icons\"\nimport useTimer from \"../hooks/useTimer\"\n\nconst GamePage = () => {\n\n  const { lang, cate } = useParams()\n  const { checkIfDarkMode } = useChangeMode()\n  const { mainLang } = useLanguage(lang)\n  const { timerStart, countTimer } = useTimer()\n\n  document.body.style.backgroundColor = checkIfDarkMode ? Background.BlueDark : Background.Blue\n\n  const words = mainLang.sortedCate.find(item => item.link == `/${lang}/${cate}`)?.words\n  const randomWord = words?.[Math.floor(Math.random() * words.length)]\n\n  const [clearGame, setClearGame] = useState(false)\n  const [startPage, setStartPage] = useState(true)\n  const [word, setWord] = useState(randomWord)\n  const [skipWord, setSkipWord] = useState({\n    anim: '',\n    correction: ''\n  })\n\n  const changeWord = (correction: string) => {\n    const [...guessWord]: any = words\n    const nextWord = words && guessWord[Math.floor(Math.random() * words.length)]\n\n    setSkipWord(prev => ({...prev, anim: 'out'}))\n\n    correction === 'wrong' ? \n      setSkipWord(prev => ({...prev, correction: 'wrong'})) :\n    correction === 'correct' ?\n      setSkipWord(prev => ({...prev, correction: 'correct'})) :\n      setSkipWord(prev => ({...prev, correction: ''}))\n\n    setTimeout(() => {\n      setWord(nextWord)\n      setSkipWord({correction:'', anim: 'in'})\n    }, 600)\n\n    setTimeout(() => [\n      setSkipWord({correction:'', anim: ''})\n    ], 1200)\n  }\n\n  useEffect(() => {\n    countTimer()\n\n    console.log(timerStart)\n  }, [timerStart])\n\n  const afterGameTexts = ['Having fun?','Better luck next time','Wanna play again?','Hope you have enjoyed the game']\n  const [afterGameText, setAfterGameText] = useState(afterGameTexts[Math.floor(Math.random() * afterGameTexts.length)])\n\n  return (\n    <div className=\"App\">\n      <main className={`app-main words-in-screen${clearGame ? ' active' : ' inactive'}${startPage ? ' start' : ''}`}>\n        <h1 id=\"words\" className={`${skipWord.correction === 'wrong' ? 'wrong-word ' : ''}${skipWord.correction === 'correct' ? 'correct-word ' : ''}${skipWord.anim}`}>{word}</h1>\n        <footer className=\"checks-btns with-top-space\">\n          <Button className=\"incorrect\" onClick={() => changeWord('wrong')} disabled={skipWord.correction !== '' ? true : false}>\n            <FontAwesomeIcon icon={faXmark}/>\n          </Button>\n          <Button className=\"correct\" onClick={() => changeWord('correct')} disabled={skipWord.correction !== '' ? true : false}>\n            <FontAwesomeIcon icon={faCheck}/>\n          </Button>\n        </footer>\n      </main>\n    </div>\n  )\n}\n\nexport default GamePage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}