{"ast":null,"code":"import{Background}from\"../types/main-page\";const useChangeMode=()=>{const checkIfDarkMode=localStorage.mode===\"dark\";const changeMode=mode=>{if(mode==\"dark\"){document.body.classList.add(\"dark-mode\");document.body.style.backgroundColor=Background.PinkDark;}else{document.body.classList.remove(\"dark-mode\");document.body.style.backgroundColor=Background.Pink;}document.body.style.transition=\"all 300ms\";localStorage.setItem('mode',mode);};return{checkIfDarkMode,changeMode};};export default useChangeMode;","map":{"version":3,"names":["Background","useChangeMode","checkIfDarkMode","localStorage","mode","changeMode","document","body","classList","add","style","backgroundColor","PinkDark","remove","Pink","transition","setItem"],"sources":["/Users/mark/Documents/GitHub/lets-guess/src/hooks/useChangeMode.ts"],"sourcesContent":["import { Background } from \"../types/main-page\";\n\nconst useChangeMode = () => {\n  const checkIfDarkMode = localStorage.mode === \"dark\"\n\n  const changeMode = (mode: string) => {\n    if (mode == \"dark\"){  \n      document.body.classList.add(\"dark-mode\");\n      document.body.style.backgroundColor = Background.PinkDark;\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n      document.body.style.backgroundColor = Background.Pink;\n    }\n    document.body.style.transition = \"all 300ms\";\n    localStorage.setItem('mode', mode)\n  }\n\n  return { checkIfDarkMode, changeMode }\n}\n\nexport default useChangeMode"],"mappings":"AAAA,OAASA,UAAU,KAAQ,oBAAoB,CAE/C,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAAC,eAAe,CAAGC,YAAY,CAACC,IAAI,GAAK,MAAM,CAEpD,KAAM,CAAAC,UAAU,CAAID,IAAY,EAAK,CACnC,GAAIA,IAAI,EAAI,MAAM,CAAC,CACjBE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CACxCH,QAAQ,CAACC,IAAI,CAACG,KAAK,CAACC,eAAe,CAAGX,UAAU,CAACY,QAAQ,CAC3D,CAAC,IAAM,CACLN,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACK,MAAM,CAAC,WAAW,CAAC,CAC3CP,QAAQ,CAACC,IAAI,CAACG,KAAK,CAACC,eAAe,CAAGX,UAAU,CAACc,IAAI,CACvD,CACAR,QAAQ,CAACC,IAAI,CAACG,KAAK,CAACK,UAAU,CAAG,WAAW,CAC5CZ,YAAY,CAACa,OAAO,CAAC,MAAM,CAAEZ,IAAI,CAAC,CACpC,CAAC,CAED,MAAO,CAAEF,eAAe,CAAEG,UAAW,CAAC,CACxC,CAAC,CAED,cAAe,CAAAJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}