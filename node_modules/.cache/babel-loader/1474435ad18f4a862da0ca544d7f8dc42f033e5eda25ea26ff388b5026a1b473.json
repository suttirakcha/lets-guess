{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { LanguagesEnum } from \"../types/main-page\";\nimport useLanguage from \"./useLanguage\";\nconst useTextIsHidden = lang => {\n  _s();\n  const {\n    mainLang\n  } = useLanguage(lang);\n\n  // const defaultText: string = \n  //   localStorage.length > 1 && localStorage.getItem(\n  //     lang === LanguagesEnum.Thai ? \"text-hidden-th\" : \n  //     lang === LanguagesEnum.Chinese ? \"text-hidden-zh\" :\n  //     lang === LanguagesEnum.German ? \"text-hidden-de\" :\n  //     \"text-hidden\"\n  //   ) || \"\"\n\n  const [text, setText] = useState(\"\");\n  const [warningText, setWarningText] = useState(\"\");\n  const [hasSensitiveWords, setHasSensitiveWords] = useState(false);\n  const handleMessage = message => {\n    lang === LanguagesEnum.Thai ? localStorage.setItem(\"text-hidden-th\", message) : lang === LanguagesEnum.Chinese ? localStorage.setItem(\"text-hidden-zh\", message) : lang === LanguagesEnum.German ? localStorage.setItem(\"text-hidden-de\", message) : localStorage.setItem(\"text-hidden\", message);\n  };\n\n  // useEffect(() => {\n  //   if (sensitiveWords.some(word => text.toUpperCase().includes(word.toUpperCase()))){\n  //     setHasSensitiveWords(true)\n  //     setWarningText(mainLang.language.warning_text)\n  //     handleMessage(\"\")\n  //   } else {\n  //     setHasSensitiveWords(false)\n  //     handleMessage(text)\n  //   }\n  // }, [hasSensitiveWords, text, handleMessage])\n\n  return {\n    hasSensitiveWords,\n    text,\n    warningText,\n    setText\n  };\n};\n_s(useTextIsHidden, \"RSQuI0gmqFQLWFDkmV7GigHp/z4=\", false, function () {\n  return [useLanguage];\n});\nexport default useTextIsHidden;","map":{"version":3,"names":["useState","LanguagesEnum","useLanguage","useTextIsHidden","lang","_s","mainLang","text","setText","warningText","setWarningText","hasSensitiveWords","setHasSensitiveWords","handleMessage","message","Thai","localStorage","setItem","Chinese","German"],"sources":["/Users/mark/Documents/GitHub/lets-guess/src/hooks/useTextIsHidden.ts"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { LanguagesEnum } from \"../types/main-page\"\nimport { sensitiveWords } from \"../data/sensitive-words\"\nimport useLanguage from \"./useLanguage\"\n\nconst useTextIsHidden = (lang: string | undefined) => {\n\n  const { mainLang } = useLanguage(lang)\n\n  // const defaultText: string = \n  //   localStorage.length > 1 && localStorage.getItem(\n  //     lang === LanguagesEnum.Thai ? \"text-hidden-th\" : \n  //     lang === LanguagesEnum.Chinese ? \"text-hidden-zh\" :\n  //     lang === LanguagesEnum.German ? \"text-hidden-de\" :\n  //     \"text-hidden\"\n  //   ) || \"\"\n\n  const [text, setText] = useState<string>(\"\")\n  const [warningText, setWarningText] = useState<string>(\"\")\n  const [hasSensitiveWords, setHasSensitiveWords] = useState(false)\n\n  const handleMessage = (message: string) => {\n    lang === LanguagesEnum.Thai ?\n      localStorage.setItem(\"text-hidden-th\", message) :\n    lang === LanguagesEnum.Chinese ?\n      localStorage.setItem(\"text-hidden-zh\", message) :\n    lang === LanguagesEnum.German ?\n      localStorage.setItem(\"text-hidden-de\", message) :\n      localStorage.setItem(\"text-hidden\", message)\n  }\n\n  // useEffect(() => {\n  //   if (sensitiveWords.some(word => text.toUpperCase().includes(word.toUpperCase()))){\n  //     setHasSensitiveWords(true)\n  //     setWarningText(mainLang.language.warning_text)\n  //     handleMessage(\"\")\n  //   } else {\n  //     setHasSensitiveWords(false)\n  //     handleMessage(text)\n  //   }\n  // }, [hasSensitiveWords, text, handleMessage])\n\n  return { hasSensitiveWords, text, warningText, setText }\n}\n\nexport default useTextIsHidden"],"mappings":";AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,oBAAoB;AAElD,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,eAAe,GAAIC,IAAwB,IAAK;EAAAC,EAAA;EAEpD,MAAM;IAAEC;EAAS,CAAC,GAAGJ,WAAW,CAACE,IAAI,CAAC;;EAEtC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMa,aAAa,GAAIC,OAAe,IAAK;IACzCV,IAAI,KAAKH,aAAa,CAACc,IAAI,GACzBC,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEH,OAAO,CAAC,GACjDV,IAAI,KAAKH,aAAa,CAACiB,OAAO,GAC5BF,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEH,OAAO,CAAC,GACjDV,IAAI,KAAKH,aAAa,CAACkB,MAAM,GAC3BH,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEH,OAAO,CAAC,GAC/CE,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,OAAO,CAAC;EAChD,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAO;IAAEH,iBAAiB;IAAEJ,IAAI;IAAEE,WAAW;IAAED;EAAQ,CAAC;AAC1D,CAAC;AAAAH,EAAA,CAtCKF,eAAe;EAAA,QAEED,WAAW;AAAA;AAsClC,eAAeC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}